# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='api.proto',
  package='api',
  syntax='proto3',
  serialized_pb=_b('\n\tapi.proto\x12\x03\x61pi\"\x0f\n\rReloadRequest\"\x10\n\x0eReloadResponse\"1\n\x0cInferRequest\x12\x0e\n\x06images\x18\x01 \x03(\x0c\x12\x11\n\tisAligned\x18\x02 \x01(\x08\"5\n\rInferResponse\x12$\n\x0bpredictions\x18\x01 \x03(\x0b\x32\x0f.api.Prediction\"\\\n\nPrediction\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12\t\n\x01x\x18\x03 \x01(\x03\x12\n\n\x02x1\x18\x04 \x01(\x03\x12\t\n\x01y\x18\x05 \x01(\x03\x12\n\n\x02y1\x18\x06 \x01(\x03\"/\n\x0f\x41\x64\x64\x46\x61\x63\x65sRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06images\x18\x02 \x03(\x0c\"1\n\x10\x41\x64\x64\x46\x61\x63\x65sResponse\x12\x1d\n\x05\x66ound\x18\x01 \x03(\x0b\x32\x0e.api.FoundFace\"0\n\tFoundFace\x12\x11\n\tfaceCount\x18\x01 \x01(\x05\x12\x10\n\x08imageIds\x18\x02 \x03(\t2\xa7\x01\n\x03\x41pi\x12\x30\n\x05Infer\x12\x11.api.InferRequest\x1a\x12.api.InferResponse\"\x00\x12\x39\n\x08\x41\x64\x64\x46\x61\x63\x65s\x12\x14.api.AddFacesRequest\x1a\x15.api.AddFacesResponse\"\x00\x12\x33\n\x06Reload\x12\x12.api.ReloadRequest\x1a\x13.api.ReloadResponse\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_RELOADREQUEST = _descriptor.Descriptor(
  name='ReloadRequest',
  full_name='api.ReloadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=33,
)


_RELOADRESPONSE = _descriptor.Descriptor(
  name='ReloadResponse',
  full_name='api.ReloadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=51,
)


_INFERREQUEST = _descriptor.Descriptor(
  name='InferRequest',
  full_name='api.InferRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='images', full_name='api.InferRequest.images', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isAligned', full_name='api.InferRequest.isAligned', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=102,
)


_INFERRESPONSE = _descriptor.Descriptor(
  name='InferResponse',
  full_name='api.InferResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='predictions', full_name='api.InferResponse.predictions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=157,
)


_PREDICTION = _descriptor.Descriptor(
  name='Prediction',
  full_name='api.Prediction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='api.Prediction.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='api.Prediction.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x', full_name='api.Prediction.x', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='x1', full_name='api.Prediction.x1', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='api.Prediction.y', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y1', full_name='api.Prediction.y1', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=251,
)


_ADDFACESREQUEST = _descriptor.Descriptor(
  name='AddFacesRequest',
  full_name='api.AddFacesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='api.AddFacesRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='images', full_name='api.AddFacesRequest.images', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=300,
)


_ADDFACESRESPONSE = _descriptor.Descriptor(
  name='AddFacesResponse',
  full_name='api.AddFacesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='found', full_name='api.AddFacesResponse.found', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=302,
  serialized_end=351,
)


_FOUNDFACE = _descriptor.Descriptor(
  name='FoundFace',
  full_name='api.FoundFace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='faceCount', full_name='api.FoundFace.faceCount', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imageIds', full_name='api.FoundFace.imageIds', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=401,
)

_INFERRESPONSE.fields_by_name['predictions'].message_type = _PREDICTION
_ADDFACESRESPONSE.fields_by_name['found'].message_type = _FOUNDFACE
DESCRIPTOR.message_types_by_name['ReloadRequest'] = _RELOADREQUEST
DESCRIPTOR.message_types_by_name['ReloadResponse'] = _RELOADRESPONSE
DESCRIPTOR.message_types_by_name['InferRequest'] = _INFERREQUEST
DESCRIPTOR.message_types_by_name['InferResponse'] = _INFERRESPONSE
DESCRIPTOR.message_types_by_name['Prediction'] = _PREDICTION
DESCRIPTOR.message_types_by_name['AddFacesRequest'] = _ADDFACESREQUEST
DESCRIPTOR.message_types_by_name['AddFacesResponse'] = _ADDFACESRESPONSE
DESCRIPTOR.message_types_by_name['FoundFace'] = _FOUNDFACE

ReloadRequest = _reflection.GeneratedProtocolMessageType('ReloadRequest', (_message.Message,), dict(
  DESCRIPTOR = _RELOADREQUEST,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.ReloadRequest)
  ))
_sym_db.RegisterMessage(ReloadRequest)

ReloadResponse = _reflection.GeneratedProtocolMessageType('ReloadResponse', (_message.Message,), dict(
  DESCRIPTOR = _RELOADRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.ReloadResponse)
  ))
_sym_db.RegisterMessage(ReloadResponse)

InferRequest = _reflection.GeneratedProtocolMessageType('InferRequest', (_message.Message,), dict(
  DESCRIPTOR = _INFERREQUEST,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.InferRequest)
  ))
_sym_db.RegisterMessage(InferRequest)

InferResponse = _reflection.GeneratedProtocolMessageType('InferResponse', (_message.Message,), dict(
  DESCRIPTOR = _INFERRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.InferResponse)
  ))
_sym_db.RegisterMessage(InferResponse)

Prediction = _reflection.GeneratedProtocolMessageType('Prediction', (_message.Message,), dict(
  DESCRIPTOR = _PREDICTION,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.Prediction)
  ))
_sym_db.RegisterMessage(Prediction)

AddFacesRequest = _reflection.GeneratedProtocolMessageType('AddFacesRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDFACESREQUEST,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.AddFacesRequest)
  ))
_sym_db.RegisterMessage(AddFacesRequest)

AddFacesResponse = _reflection.GeneratedProtocolMessageType('AddFacesResponse', (_message.Message,), dict(
  DESCRIPTOR = _ADDFACESRESPONSE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.AddFacesResponse)
  ))
_sym_db.RegisterMessage(AddFacesResponse)

FoundFace = _reflection.GeneratedProtocolMessageType('FoundFace', (_message.Message,), dict(
  DESCRIPTOR = _FOUNDFACE,
  __module__ = 'api_pb2'
  # @@protoc_insertion_point(class_scope:api.FoundFace)
  ))
_sym_db.RegisterMessage(FoundFace)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ApiStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Infer = channel.unary_unary(
          '/api.Api/Infer',
          request_serializer=InferRequest.SerializeToString,
          response_deserializer=InferResponse.FromString,
          )
      self.AddFaces = channel.unary_unary(
          '/api.Api/AddFaces',
          request_serializer=AddFacesRequest.SerializeToString,
          response_deserializer=AddFacesResponse.FromString,
          )
      self.Reload = channel.unary_unary(
          '/api.Api/Reload',
          request_serializer=ReloadRequest.SerializeToString,
          response_deserializer=ReloadResponse.FromString,
          )


  class ApiServicer(object):
    """The greeting service definition.
    """

    def Infer(self, request, context):
      """Sends a greeting
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddFaces(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reload(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Infer': grpc.unary_unary_rpc_method_handler(
            servicer.Infer,
            request_deserializer=InferRequest.FromString,
            response_serializer=InferResponse.SerializeToString,
        ),
        'AddFaces': grpc.unary_unary_rpc_method_handler(
            servicer.AddFaces,
            request_deserializer=AddFacesRequest.FromString,
            response_serializer=AddFacesResponse.SerializeToString,
        ),
        'Reload': grpc.unary_unary_rpc_method_handler(
            servicer.Reload,
            request_deserializer=ReloadRequest.FromString,
            response_serializer=ReloadResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'api.Api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaApiServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def Infer(self, request, context):
      """Sends a greeting
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddFaces(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reload(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaApiStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def Infer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sends a greeting
      """
      raise NotImplementedError()
    Infer.future = None
    def AddFaces(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    AddFaces.future = None
    def Reload(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Reload.future = None


  def beta_create_Api_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('api.Api', 'AddFaces'): AddFacesRequest.FromString,
      ('api.Api', 'Infer'): InferRequest.FromString,
      ('api.Api', 'Reload'): ReloadRequest.FromString,
    }
    response_serializers = {
      ('api.Api', 'AddFaces'): AddFacesResponse.SerializeToString,
      ('api.Api', 'Infer'): InferResponse.SerializeToString,
      ('api.Api', 'Reload'): ReloadResponse.SerializeToString,
    }
    method_implementations = {
      ('api.Api', 'AddFaces'): face_utilities.unary_unary_inline(servicer.AddFaces),
      ('api.Api', 'Infer'): face_utilities.unary_unary_inline(servicer.Infer),
      ('api.Api', 'Reload'): face_utilities.unary_unary_inline(servicer.Reload),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Api_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('api.Api', 'AddFaces'): AddFacesRequest.SerializeToString,
      ('api.Api', 'Infer'): InferRequest.SerializeToString,
      ('api.Api', 'Reload'): ReloadRequest.SerializeToString,
    }
    response_deserializers = {
      ('api.Api', 'AddFaces'): AddFacesResponse.FromString,
      ('api.Api', 'Infer'): InferResponse.FromString,
      ('api.Api', 'Reload'): ReloadResponse.FromString,
    }
    cardinalities = {
      'AddFaces': cardinality.Cardinality.UNARY_UNARY,
      'Infer': cardinality.Cardinality.UNARY_UNARY,
      'Reload': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'api.Api', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
